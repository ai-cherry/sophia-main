# Docker Compose configuration for Sophia AI

services:
  # Sophia AI Application
  sophia-app:
    build: .
    container_name: sophia-payready
    ports:
      - "5001:5000"
    environment:
      - DATABASE_URL=postgresql://sophia:sophia_pass@sophia-postgres:5432/sophia_payready
      - REDIS_URL=redis://sophia-redis:6379
      - SECRET_KEY=${SECRET_KEY:-sophia-secret-key-change-in-production}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - HUBSPOT_API_KEY=${HUBSPOT_API_KEY}
      - GONG_API_KEY=${GONG_API_KEY}
      - GONG_API_SECRET=${GONG_API_SECRET}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - WEAVIATE_API_KEY=${WEAVIATE_API_KEY}
      - WEAVIATE_URL=${WEAVIATE_URL}
    depends_on:
      - sophia-postgres
      - sophia-redis
    restart: unless-stopped
    networks:
      - sophia-network

  # PostgreSQL Database
  sophia-postgres:
    image: postgres:15-alpine
    container_name: sophia-postgres
    environment:
      - POSTGRES_DB=sophia_payready
      - POSTGRES_USER=sophia
      - POSTGRES_PASSWORD=sophia_pass
    volumes:
      - sophia_postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - sophia-network

  # Redis Cache
  sophia-redis:
    image: redis:7-alpine
    container_name: sophia-redis
    ports:
      - "6380:6379"
    volumes:
      - sophia_redis_data:/data
    restart: unless-stopped
    networks:
      - sophia-network

  # Nginx Reverse Proxy
  sophia-nginx:
    image: nginx:alpine
    container_name: sophia-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - sophia-app
    restart: unless-stopped
    networks:
      - sophia-network

  # Prometheus Monitoring
  sophia-prometheus:
    image: prom/prometheus:latest
    container_name: sophia-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - sophia_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - sophia-network

  # Grafana Dashboard
  sophia-grafana:
    image: grafana/grafana:latest
    container_name: sophia-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - sophia_grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - sophia-network

volumes:
  sophia_postgres_data:
  sophia_redis_data:
  sophia_prometheus_data:
  sophia_grafana_data:

networks:
  sophia-network:
    driver: bridge

