{
  "timestamp": "2025-06-18T12:02:43.818189",
  "overall_status": "ALL FAILED",
  "success_count": 0,
  "total_count": 4,
  "results": [
    {
      "service": "SNOWFLAKE",
      "status": "FAILED",
      "message": "Failed to connect to Snowflake: 250001 (08001): None: Failed to connect to DB: MYJDJNU-FP71296.snowflakecomputing.com:443. Multi-factor authentication is required for this account. Log in to Snowsight to enroll.",
      "details": {
        "error_type": "DatabaseError",
        "error_message": "250001 (08001): None: Failed to connect to DB: MYJDJNU-FP71296.snowflakecomputing.com:443. Multi-factor authentication is required for this account. Log in to Snowsight to enroll.",
        "traceback": "Traceback (most recent call last):\n  File \"/Users/lynnmusil/sophia-main-4/./unified_integration_test.py\", line 66, in test_snowflake\n    conn = snowflake.connector.connect(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/__init__.py\", line 54, in Connect\n    return SnowflakeConnection(**kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/connection.py\", line 548, in __init__\n    self.connect(**kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/connection.py\", line 901, in connect\n    self.__open_connection()\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/connection.py\", line 1293, in __open_connection\n    self.authenticate_with_retry(self.auth_class)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/connection.py\", line 1615, in authenticate_with_retry\n    self._authenticate(auth_instance)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/connection.py\", line 1647, in _authenticate\n    auth.authenticate(\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/auth/_auth.py\", line 389, in authenticate\n    Error.errorhandler_wrapper(\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/errors.py\", line 279, in errorhandler_wrapper\n    handed_over = Error.hand_to_other_handler(\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/errors.py\", line 337, in hand_to_other_handler\n    connection.errorhandler(connection, cursor, error_class, error_value)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/snowflake/connector/errors.py\", line 210, in default_errorhandler\n    raise error_class(\nsnowflake.connector.errors.DatabaseError: 250001 (08001): None: Failed to connect to DB: MYJDJNU-FP71296.snowflakecomputing.com:443. Multi-factor authentication is required for this account. Log in to Snowsight to enroll.\n"
      },
      "timestamp": "2025-06-18T12:02:43.471884"
    },
    {
      "service": "GONG",
      "status": "FAILED",
      "message": "Failed to connect to Gong API: Cannot connect to host us-70092.api.gong.io:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')]",
      "details": {
        "error_type": "ClientConnectorCertificateError",
        "error_message": "Cannot connect to host us-70092.api.gong.io:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')]",
        "traceback": "Traceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 992, in _wrap_create_connection\n    return await self._loop.create_connection(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py\", line 1113, in create_connection\n    transport, protocol = await self._create_connection_transport(\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py\", line 1146, in _create_connection_transport\n    await waiter\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/sslproto.py\", line 578, in _on_handshake_complete\n    raise handshake_exc\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/sslproto.py\", line 560, in _do_handshake\n    self._sslobj.do_handshake()\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 979, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/lynnmusil/sophia-main-4/./unified_integration_test.py\", line 135, in test_gong\n    async with session.get(url, headers=headers) as response:\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/client.py\", line 1187, in __aenter__\n    self._resp = await self._coro\n                 ^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/client.py\", line 574, in _request\n    conn = await self._connector.connect(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 544, in connect\n    proto = await self._create_connection(req, traces, timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 911, in _create_connection\n    _, proto = await self._create_direct_connection(req, traces, timeout)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 1235, in _create_direct_connection\n    raise last_exc\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 1204, in _create_direct_connection\n    transp, proto = await self._wrap_create_connection(\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 994, in _wrap_create_connection\n    raise ClientConnectorCertificateError(req.connection_key, exc) from exc\naiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host us-70092.api.gong.io:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')]\n"
      },
      "timestamp": "2025-06-18T12:02:43.665598"
    },
    {
      "service": "VERCEL",
      "status": "FAILED",
      "message": "Failed to connect to Vercel API: Cannot connect to host api.vercel.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')]",
      "details": {
        "error_type": "ClientConnectorCertificateError",
        "error_message": "Cannot connect to host api.vercel.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')]",
        "traceback": "Traceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 992, in _wrap_create_connection\n    return await self._loop.create_connection(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py\", line 1113, in create_connection\n    transport, protocol = await self._create_connection_transport(\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py\", line 1146, in _create_connection_transport\n    await waiter\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/sslproto.py\", line 578, in _on_handshake_complete\n    raise handshake_exc\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/sslproto.py\", line 560, in _do_handshake\n    self._sslobj.do_handshake()\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 979, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/lynnmusil/sophia-main-4/./unified_integration_test.py\", line 187, in test_vercel\n    async with session.get(url, headers=headers) as response:\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/client.py\", line 1187, in __aenter__\n    self._resp = await self._coro\n                 ^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/client.py\", line 574, in _request\n    conn = await self._connector.connect(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 544, in connect\n    proto = await self._create_connection(req, traces, timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 911, in _create_connection\n    _, proto = await self._create_direct_connection(req, traces, timeout)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 1235, in _create_direct_connection\n    raise last_exc\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 1204, in _create_direct_connection\n    transp, proto = await self._wrap_create_connection(\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 994, in _wrap_create_connection\n    raise ClientConnectorCertificateError(req.connection_key, exc) from exc\naiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.vercel.com:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')]\n"
      },
      "timestamp": "2025-06-18T12:02:43.571837"
    },
    {
      "service": "ESTUARY",
      "status": "FAILED",
      "message": "Failed to connect to Estuary API: Cannot connect to host api.estuary.dev:443 ssl:default [nodename nor servname provided, or not known]",
      "details": {
        "error_type": "ClientConnectorError",
        "error_message": "Cannot connect to host api.estuary.dev:443 ssl:default [nodename nor servname provided, or not known]",
        "traceback": "Traceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 1173, in _create_direct_connection\n    hosts = await asyncio.shield(host_resolved)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 884, in _resolve_host\n    addrs = await self._resolver.resolve(host, port, family=self._family)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/resolver.py\", line 33, in resolve\n    infos = await self._loop.getaddrinfo(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py\", line 868, in getaddrinfo\n    return await self.run_in_executor(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/concurrent/futures/thread.py\", line 58, in run\n    result = self.fn(*self.args, **self.kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/socket.py\", line 962, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/lynnmusil/sophia-main-4/./unified_integration_test.py\", line 240, in test_estuary\n    async with session.get(url, headers=headers) as response:\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/client.py\", line 1187, in __aenter__\n    self._resp = await self._coro\n                 ^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/client.py\", line 574, in _request\n    conn = await self._connector.connect(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 544, in connect\n    proto = await self._create_connection(req, traces, timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 911, in _create_connection\n    _, proto = await self._create_direct_connection(req, traces, timeout)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/aiohttp/connector.py\", line 1187, in _create_direct_connection\n    raise ClientConnectorError(req.connection_key, exc) from exc\naiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api.estuary.dev:443 ssl:default [nodename nor servname provided, or not known]\n"
      },
      "timestamp": "2025-06-18T12:02:43.818121"
    }
  ],
  "recommendations": [
    "[SNOWFLAKE] Check Snowflake credentials and network connectivity",
    "[GONG] Check Gong API credentials and network connectivity",
    "[VERCEL] Check Vercel access token and network connectivity",
    "[ESTUARY] Check Estuary API key and network connectivity",
    "[GENERAL] All integrations failed, check environment variables and network connectivity",
    "[SECURITY] Regularly rotate API keys and credentials using sophia_secrets.py rotate",
    "[SECURITY] Ensure all secrets are stored in Pulumi ESC and synced to GitHub using sophia_secrets.py"
  ]
}