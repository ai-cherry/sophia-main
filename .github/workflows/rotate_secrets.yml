name: Rotate Secrets

on:
  schedule:
    # Run every month on the 1st at 3 AM UTC
    - cron: '0 3 1 * *'
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to rotate secrets for (leave empty for all)'
        required: false
        type: string
      dry_run:
        description: 'Dry run (no actual changes)'
        required: false
        default: false
        type: boolean
      environment:
        description: 'Environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production

jobs:
  rotate-secrets:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pulumi
      
      - name: Setup GitHub CLI
        uses: cli/cli@v2.32.1
        with:
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Validate inputs
        run: |
          echo "Service: ${{ github.event.inputs.service || 'all' }}"
          echo "Dry run: ${{ github.event.inputs.dry_run || 'false' }}"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
      
      - name: Check rotation status
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          cd infrastructure/esc
          python check_rotation_status.py \
            --environment ${{ github.event.inputs.environment || 'production' }} \
            --service "${{ github.event.inputs.service }}"
      
      - name: Rotate secrets
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd infrastructure/esc
          
          # Build rotation command
          ROTATION_CMD="python secret_rotation_framework.py --environment ${{ github.event.inputs.environment || 'production' }}"
          
          if [ "${{ github.event.inputs.service }}" != "" ]; then
            ROTATION_CMD="$ROTATION_CMD --service ${{ github.event.inputs.service }}"
          fi
          
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            ROTATION_CMD="$ROTATION_CMD --dry-run"
          fi
          
          echo "Executing: $ROTATION_CMD"
          eval $ROTATION_CMD
      
      - name: Verify rotation
        if: github.event.inputs.dry_run != 'true'
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          cd infrastructure/esc
          python check_rotation_status.py \
            --environment ${{ github.event.inputs.environment || 'production' }} \
            --service "${{ github.event.inputs.service }}" \
            --verify-recent
      
      - name: Notify completion
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Secret rotation completed successfully"
          else
            echo "❌ Secret rotation failed"
          fi
          
          # Add Slack notification or other notification logic here
          echo "Service: ${{ github.event.inputs.service || 'all' }}"
          echo "Dry run: ${{ github.event.inputs.dry_run || 'false' }}"
          echo "Status: ${{ job.status }}"

