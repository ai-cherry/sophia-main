name: Synchronize Secrets

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      direction:
        description: 'Synchronization direction'
        required: true
        default: 'github-to-pulumi'
        type: choice
        options:
          - github-to-pulumi
          - pulumi-to-github
          - bidirectional
      dry_run:
        description: 'Dry run (no actual changes)'
        required: false
        default: false
        type: boolean
      environment:
        description: 'Environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production

jobs:
  sync-secrets:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pulumi
      
      - name: Setup GitHub CLI
        uses: cli/cli@v2.32.1
        with:
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Validate inputs
        run: |
          echo "Direction: ${{ github.event.inputs.direction || 'github-to-pulumi' }}"
          echo "Dry run: ${{ github.event.inputs.dry_run || 'false' }}"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
      
      - name: Pre-sync validation
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd infrastructure/esc
          
          # Validate Pulumi ESC connection
          pulumi login
          echo "✅ Pulumi ESC connection validated"
          
          # Validate GitHub connection
          gh auth status
          echo "✅ GitHub connection validated"
      
      - name: Synchronize secrets
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd infrastructure/esc
          
          # Build sync command
          SYNC_CMD="python github_sync_bidirectional.py --environment ${{ github.event.inputs.environment || 'production' }}"
          
          case "${{ github.event.inputs.direction || 'github-to-pulumi' }}" in
            "github-to-pulumi")
              SYNC_CMD="$SYNC_CMD --direction github-to-pulumi"
              ;;
            "pulumi-to-github")
              SYNC_CMD="$SYNC_CMD --direction pulumi-to-github"
              ;;
            "bidirectional")
              SYNC_CMD="$SYNC_CMD --direction bidirectional"
              ;;
          esac
          
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            SYNC_CMD="$SYNC_CMD --dry-run"
          fi
          
          echo "Executing: $SYNC_CMD"
          eval $SYNC_CMD
      
      - name: Post-sync validation
        if: github.event.inputs.dry_run != 'true'
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd infrastructure/esc
          
          # Validate synchronization results
          python github_sync_bidirectional.py \
            --environment ${{ github.event.inputs.environment || 'production' }} \
            --validate-only
      
      - name: Generate sync report
        if: always()
        run: |
          echo "# Secret Synchronization Report" > sync_report.md
          echo "" >> sync_report.md
          echo "**Direction:** ${{ github.event.inputs.direction || 'github-to-pulumi' }}" >> sync_report.md
          echo "**Environment:** ${{ github.event.inputs.environment || 'production' }}" >> sync_report.md
          echo "**Dry Run:** ${{ github.event.inputs.dry_run || 'false' }}" >> sync_report.md
          echo "**Date:** $(date)" >> sync_report.md
          echo "**Status:** ${{ job.status }}" >> sync_report.md
          echo "" >> sync_report.md
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ **Result:** Synchronization completed successfully" >> sync_report.md
          else
            echo "❌ **Result:** Synchronization failed" >> sync_report.md
          fi
          
          cat sync_report.md
      
      - name: Upload sync report
        uses: actions/upload-artifact@v3
        with:
          name: secret-sync-report
          path: sync_report.md
      
      - name: Notify completion
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Secret synchronization completed successfully"
          else
            echo "❌ Secret synchronization failed"
          fi
          
          # Add Slack notification or other notification logic here
          echo "Direction: ${{ github.event.inputs.direction || 'github-to-pulumi' }}"
          echo "Dry run: ${{ github.event.inputs.dry_run || 'false' }}"
          echo "Status: ${{ job.status }}"

