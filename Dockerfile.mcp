# Sophia AI - Docker MCP Toolkit Integration

FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install MCP dependencies
RUN pip install mcp

# Copy application code
COPY . .

# Set environment variables
ENV PYTHONPATH=/app
ENV SOPHIA_ENVIRONMENT=production

# Expose MCP server ports
EXPOSE 8000 8001 8002 8003 8004 8005 8006 8007

# Create entrypoint script
RUN echo '#!/bin/bash\n\
# Start all MCP servers in background\n\
python -m backend.mcp.sophia_mcp_server &\n\
python -m backend.mcp.gong_mcp_server &\n\
python -m backend.mcp.vercel_mcp_server &\n\
python -m backend.mcp.lambda_labs_mcp_server &\n\
python -m backend.mcp.snowflake_mcp_server &\n\
python -m backend.mcp.vector_mcp_server &\n\
python -m backend.mcp.estuary_mcp_server &\n\
python -m backend.mcp.airbyte_mcp_server &\n\
\n\
# Wait for all background processes\n\
wait\n\
' > /app/start_mcp_servers.sh

RUN chmod +x /app/start_mcp_servers.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import asyncio; from backend.core.integration_registry import integration_registry; print('healthy' if asyncio.run(integration_registry.initialize()) else 'unhealthy')"

# Default command
CMD ["/app/start_mcp_servers.sh"]

